x-001: &merged-conf
  logging:
    driver: json-file
    options:
      max-size: 10m
      max-file: '3'
  # extra_hosts:
  #   - 'host.docker.internal:host-gateway'

services:
  app:
    container_name: deploily-backend-app 
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile

    volumes:
      - ../..:/workspaces:cached

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)
    network_mode: service:db
    env_file:
      - ".env"


  db:
    container_name: deploily-backend-db
    image: postgres:latest
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: deploily
      POSTGRES_PASSWORD: postgres

    # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  apisix-dashboard:
    container_name: deploily-backend-apisix-dashboard
    image: apache/apisix-dashboard:3.0.0-centos # centos or alpine
    # ports:
    #   - '9000:9000'
    volumes:
      - ./dashboard_conf/conf.yaml:/usr/local/apisix-dashboard/conf/conf.yaml
    network_mode: service:db

  apisix:
    container_name: deploily-backend-apisix
    image: apache/apisix:3.1.0-debian
    volumes:
      - ./apisix_conf/config.yaml:/usr/local/apisix/conf/config.yaml:ro
    depends_on:
      - etcd
    # ports:
    #   - '9080:9080'
    <<: *merged-conf
    network_mode: service:db

  keycloak_web:
    image: quay.io/keycloak/keycloak:23.0.7
    # container_name: keycloak_web
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://localhost:5433/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password

      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false

      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: start-dev
    depends_on:
      - keycloakdb
    # ports:
    #   - 8080:8080
    network_mode: service:db
  
  keycloakdb:
    # image: postgres:15
    build:
      context: .
      dockerfile: ./Dockerfile.postgres
    volumes:
      - postgres-data-keycloak:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    network_mode: service:db


  etcd:
    container_name: deploily-backend-etcd
    image: bitnami/etcd:3.5.11
    environment:
      ETCD_ENABLE_V2: 'true'
      ALLOW_NONE_AUTHENTICATION: 'yes'
      ETCD_ADVERTISE_CLIENT_URLS: 'http://localhost:2379'
      ETCD_LISTEN_CLIENT_URLS: 'http://0.0.0.0:2379'
    network_mode: service:db
    volumes:
      - etcd_data:/bitnami/etcd
    <<: *merged-conf
  

  redis:
    image: redis:7.2.3-bookworm
    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    # network_mode: service:db
    ports:
      - "6379:6379"

  # prometheus:
  #   container_name: deploily-backend-prometheus
  #   image: prom/prometheus:v2.25.0
  #   volumes:
  #     - ./prometheus_conf/prometheus.yml:/etc/prometheus/prometheus.yml
  #   <<: *merged-conf

  # grafana:
  #   container_name: deploily-backend-grafana
  #   image: grafana/grafana:7.3.7
  #   ports:
  #     - "13000:3000"
  #   volumes:
  #     - ./grafana_conf/provisioning:/etc/grafana/provisioning
  #     - ./grafana_conf/dashboards:/var/lib/grafana/dashboards
  #     - ./grafana_conf/config/grafana.ini:/etc/grafana/grafana.ini
  #   <<: *merged-conf
  
  
volumes:
  postgres-data-keycloak:

  etcd_data:
    driver: local
  postgres-data:
